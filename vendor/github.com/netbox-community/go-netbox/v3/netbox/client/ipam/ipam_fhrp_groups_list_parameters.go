// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2020 The go-netbox Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package ipam

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewIpamFhrpGroupsListParams creates a new IpamFhrpGroupsListParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewIpamFhrpGroupsListParams() *IpamFhrpGroupsListParams {
	return &IpamFhrpGroupsListParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewIpamFhrpGroupsListParamsWithTimeout creates a new IpamFhrpGroupsListParams object
// with the ability to set a timeout on a request.
func NewIpamFhrpGroupsListParamsWithTimeout(timeout time.Duration) *IpamFhrpGroupsListParams {
	return &IpamFhrpGroupsListParams{
		timeout: timeout,
	}
}

// NewIpamFhrpGroupsListParamsWithContext creates a new IpamFhrpGroupsListParams object
// with the ability to set a context for a request.
func NewIpamFhrpGroupsListParamsWithContext(ctx context.Context) *IpamFhrpGroupsListParams {
	return &IpamFhrpGroupsListParams{
		Context: ctx,
	}
}

// NewIpamFhrpGroupsListParamsWithHTTPClient creates a new IpamFhrpGroupsListParams object
// with the ability to set a custom HTTPClient for a request.
func NewIpamFhrpGroupsListParamsWithHTTPClient(client *http.Client) *IpamFhrpGroupsListParams {
	return &IpamFhrpGroupsListParams{
		HTTPClient: client,
	}
}

/*
IpamFhrpGroupsListParams contains all the parameters to send to the API endpoint

	for the ipam fhrp groups list operation.

	Typically these are written to a http.Request.
*/
type IpamFhrpGroupsListParams struct {

	// AuthKey.
	AuthKey *string

	// AuthKeyEmpty.
	AuthKeyEmpty *string

	// AuthKeyIc.
	AuthKeyIc *string

	// AuthKeyIe.
	AuthKeyIe *string

	// AuthKeyIew.
	AuthKeyIew *string

	// AuthKeyIsw.
	AuthKeyIsw *string

	// AuthKeyn.
	AuthKeyn *string

	// AuthKeyNic.
	AuthKeyNic *string

	// AuthKeyNie.
	AuthKeyNie *string

	// AuthKeyNiew.
	AuthKeyNiew *string

	// AuthKeyNisw.
	AuthKeyNisw *string

	// AuthType.
	AuthType *string

	// AuthTypen.
	AuthTypen *string

	// Created.
	Created *string

	// CreatedGt.
	CreatedGt *string

	// CreatedGte.
	CreatedGte *string

	// CreatedLt.
	CreatedLt *string

	// CreatedLte.
	CreatedLte *string

	// Createdn.
	Createdn *string

	// GroupID.
	GroupID *string

	// GroupIDGt.
	GroupIDGt *string

	// GroupIDGte.
	GroupIDGte *string

	// GroupIDLt.
	GroupIDLt *string

	// GroupIDLte.
	GroupIDLte *string

	// GroupIDn.
	GroupIDn *string

	// ID.
	ID *string

	// IDGt.
	IDGt *string

	// IDGte.
	IDGte *string

	// IDLt.
	IDLt *string

	// IDLte.
	IDLte *string

	// IDn.
	IDn *string

	// LastUpdated.
	LastUpdated *string

	// LastUpdatedGt.
	LastUpdatedGt *string

	// LastUpdatedGte.
	LastUpdatedGte *string

	// LastUpdatedLt.
	LastUpdatedLt *string

	// LastUpdatedLte.
	LastUpdatedLte *string

	// LastUpdatedn.
	LastUpdatedn *string

	/* Limit.

	   Number of results to return per page.
	*/
	Limit *int64

	// Name.
	Name *string

	// NameEmpty.
	NameEmpty *string

	// NameIc.
	NameIc *string

	// NameIe.
	NameIe *string

	// NameIew.
	NameIew *string

	// NameIsw.
	NameIsw *string

	// Namen.
	Namen *string

	// NameNic.
	NameNic *string

	// NameNie.
	NameNie *string

	// NameNiew.
	NameNiew *string

	// NameNisw.
	NameNisw *string

	/* Offset.

	   The initial index from which to return the results.
	*/
	Offset *int64

	/* Ordering.

	   Which field to use when ordering the results.
	*/
	Ordering *string

	// Protocol.
	Protocol *string

	// Protocoln.
	Protocoln *string

	// Q.
	Q *string

	// RelatedIP.
	RelatedIP *string

	// Tag.
	Tag *string

	// Tagn.
	Tagn *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the ipam fhrp groups list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *IpamFhrpGroupsListParams) WithDefaults() *IpamFhrpGroupsListParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the ipam fhrp groups list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *IpamFhrpGroupsListParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithTimeout(timeout time.Duration) *IpamFhrpGroupsListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithContext(ctx context.Context) *IpamFhrpGroupsListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithHTTPClient(client *http.Client) *IpamFhrpGroupsListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthKey adds the authKey to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithAuthKey(authKey *string) *IpamFhrpGroupsListParams {
	o.SetAuthKey(authKey)
	return o
}

// SetAuthKey adds the authKey to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetAuthKey(authKey *string) {
	o.AuthKey = authKey
}

// WithAuthKeyEmpty adds the authKeyEmpty to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithAuthKeyEmpty(authKeyEmpty *string) *IpamFhrpGroupsListParams {
	o.SetAuthKeyEmpty(authKeyEmpty)
	return o
}

// SetAuthKeyEmpty adds the authKeyEmpty to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetAuthKeyEmpty(authKeyEmpty *string) {
	o.AuthKeyEmpty = authKeyEmpty
}

// WithAuthKeyIc adds the authKeyIc to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithAuthKeyIc(authKeyIc *string) *IpamFhrpGroupsListParams {
	o.SetAuthKeyIc(authKeyIc)
	return o
}

// SetAuthKeyIc adds the authKeyIc to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetAuthKeyIc(authKeyIc *string) {
	o.AuthKeyIc = authKeyIc
}

// WithAuthKeyIe adds the authKeyIe to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithAuthKeyIe(authKeyIe *string) *IpamFhrpGroupsListParams {
	o.SetAuthKeyIe(authKeyIe)
	return o
}

// SetAuthKeyIe adds the authKeyIe to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetAuthKeyIe(authKeyIe *string) {
	o.AuthKeyIe = authKeyIe
}

// WithAuthKeyIew adds the authKeyIew to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithAuthKeyIew(authKeyIew *string) *IpamFhrpGroupsListParams {
	o.SetAuthKeyIew(authKeyIew)
	return o
}

// SetAuthKeyIew adds the authKeyIew to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetAuthKeyIew(authKeyIew *string) {
	o.AuthKeyIew = authKeyIew
}

// WithAuthKeyIsw adds the authKeyIsw to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithAuthKeyIsw(authKeyIsw *string) *IpamFhrpGroupsListParams {
	o.SetAuthKeyIsw(authKeyIsw)
	return o
}

// SetAuthKeyIsw adds the authKeyIsw to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetAuthKeyIsw(authKeyIsw *string) {
	o.AuthKeyIsw = authKeyIsw
}

// WithAuthKeyn adds the authKeyn to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithAuthKeyn(authKeyn *string) *IpamFhrpGroupsListParams {
	o.SetAuthKeyn(authKeyn)
	return o
}

// SetAuthKeyn adds the authKeyN to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetAuthKeyn(authKeyn *string) {
	o.AuthKeyn = authKeyn
}

// WithAuthKeyNic adds the authKeyNic to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithAuthKeyNic(authKeyNic *string) *IpamFhrpGroupsListParams {
	o.SetAuthKeyNic(authKeyNic)
	return o
}

// SetAuthKeyNic adds the authKeyNic to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetAuthKeyNic(authKeyNic *string) {
	o.AuthKeyNic = authKeyNic
}

// WithAuthKeyNie adds the authKeyNie to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithAuthKeyNie(authKeyNie *string) *IpamFhrpGroupsListParams {
	o.SetAuthKeyNie(authKeyNie)
	return o
}

// SetAuthKeyNie adds the authKeyNie to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetAuthKeyNie(authKeyNie *string) {
	o.AuthKeyNie = authKeyNie
}

// WithAuthKeyNiew adds the authKeyNiew to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithAuthKeyNiew(authKeyNiew *string) *IpamFhrpGroupsListParams {
	o.SetAuthKeyNiew(authKeyNiew)
	return o
}

// SetAuthKeyNiew adds the authKeyNiew to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetAuthKeyNiew(authKeyNiew *string) {
	o.AuthKeyNiew = authKeyNiew
}

// WithAuthKeyNisw adds the authKeyNisw to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithAuthKeyNisw(authKeyNisw *string) *IpamFhrpGroupsListParams {
	o.SetAuthKeyNisw(authKeyNisw)
	return o
}

// SetAuthKeyNisw adds the authKeyNisw to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetAuthKeyNisw(authKeyNisw *string) {
	o.AuthKeyNisw = authKeyNisw
}

// WithAuthType adds the authType to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithAuthType(authType *string) *IpamFhrpGroupsListParams {
	o.SetAuthType(authType)
	return o
}

// SetAuthType adds the authType to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetAuthType(authType *string) {
	o.AuthType = authType
}

// WithAuthTypen adds the authTypen to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithAuthTypen(authTypen *string) *IpamFhrpGroupsListParams {
	o.SetAuthTypen(authTypen)
	return o
}

// SetAuthTypen adds the authTypeN to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetAuthTypen(authTypen *string) {
	o.AuthTypen = authTypen
}

// WithCreated adds the created to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithCreated(created *string) *IpamFhrpGroupsListParams {
	o.SetCreated(created)
	return o
}

// SetCreated adds the created to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetCreated(created *string) {
	o.Created = created
}

// WithCreatedGt adds the createdGt to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithCreatedGt(createdGt *string) *IpamFhrpGroupsListParams {
	o.SetCreatedGt(createdGt)
	return o
}

// SetCreatedGt adds the createdGt to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetCreatedGt(createdGt *string) {
	o.CreatedGt = createdGt
}

// WithCreatedGte adds the createdGte to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithCreatedGte(createdGte *string) *IpamFhrpGroupsListParams {
	o.SetCreatedGte(createdGte)
	return o
}

// SetCreatedGte adds the createdGte to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetCreatedGte(createdGte *string) {
	o.CreatedGte = createdGte
}

// WithCreatedLt adds the createdLt to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithCreatedLt(createdLt *string) *IpamFhrpGroupsListParams {
	o.SetCreatedLt(createdLt)
	return o
}

// SetCreatedLt adds the createdLt to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetCreatedLt(createdLt *string) {
	o.CreatedLt = createdLt
}

// WithCreatedLte adds the createdLte to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithCreatedLte(createdLte *string) *IpamFhrpGroupsListParams {
	o.SetCreatedLte(createdLte)
	return o
}

// SetCreatedLte adds the createdLte to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetCreatedLte(createdLte *string) {
	o.CreatedLte = createdLte
}

// WithCreatedn adds the createdn to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithCreatedn(createdn *string) *IpamFhrpGroupsListParams {
	o.SetCreatedn(createdn)
	return o
}

// SetCreatedn adds the createdN to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetCreatedn(createdn *string) {
	o.Createdn = createdn
}

// WithGroupID adds the groupID to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithGroupID(groupID *string) *IpamFhrpGroupsListParams {
	o.SetGroupID(groupID)
	return o
}

// SetGroupID adds the groupId to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetGroupID(groupID *string) {
	o.GroupID = groupID
}

// WithGroupIDGt adds the groupIDGt to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithGroupIDGt(groupIDGt *string) *IpamFhrpGroupsListParams {
	o.SetGroupIDGt(groupIDGt)
	return o
}

// SetGroupIDGt adds the groupIdGt to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetGroupIDGt(groupIDGt *string) {
	o.GroupIDGt = groupIDGt
}

// WithGroupIDGte adds the groupIDGte to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithGroupIDGte(groupIDGte *string) *IpamFhrpGroupsListParams {
	o.SetGroupIDGte(groupIDGte)
	return o
}

// SetGroupIDGte adds the groupIdGte to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetGroupIDGte(groupIDGte *string) {
	o.GroupIDGte = groupIDGte
}

// WithGroupIDLt adds the groupIDLt to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithGroupIDLt(groupIDLt *string) *IpamFhrpGroupsListParams {
	o.SetGroupIDLt(groupIDLt)
	return o
}

// SetGroupIDLt adds the groupIdLt to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetGroupIDLt(groupIDLt *string) {
	o.GroupIDLt = groupIDLt
}

// WithGroupIDLte adds the groupIDLte to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithGroupIDLte(groupIDLte *string) *IpamFhrpGroupsListParams {
	o.SetGroupIDLte(groupIDLte)
	return o
}

// SetGroupIDLte adds the groupIdLte to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetGroupIDLte(groupIDLte *string) {
	o.GroupIDLte = groupIDLte
}

// WithGroupIDn adds the groupIDn to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithGroupIDn(groupIDn *string) *IpamFhrpGroupsListParams {
	o.SetGroupIDn(groupIDn)
	return o
}

// SetGroupIDn adds the groupIdN to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetGroupIDn(groupIDn *string) {
	o.GroupIDn = groupIDn
}

// WithID adds the id to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithID(id *string) *IpamFhrpGroupsListParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetID(id *string) {
	o.ID = id
}

// WithIDGt adds the iDGt to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithIDGt(iDGt *string) *IpamFhrpGroupsListParams {
	o.SetIDGt(iDGt)
	return o
}

// SetIDGt adds the idGt to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetIDGt(iDGt *string) {
	o.IDGt = iDGt
}

// WithIDGte adds the iDGte to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithIDGte(iDGte *string) *IpamFhrpGroupsListParams {
	o.SetIDGte(iDGte)
	return o
}

// SetIDGte adds the idGte to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetIDGte(iDGte *string) {
	o.IDGte = iDGte
}

// WithIDLt adds the iDLt to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithIDLt(iDLt *string) *IpamFhrpGroupsListParams {
	o.SetIDLt(iDLt)
	return o
}

// SetIDLt adds the idLt to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetIDLt(iDLt *string) {
	o.IDLt = iDLt
}

// WithIDLte adds the iDLte to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithIDLte(iDLte *string) *IpamFhrpGroupsListParams {
	o.SetIDLte(iDLte)
	return o
}

// SetIDLte adds the idLte to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetIDLte(iDLte *string) {
	o.IDLte = iDLte
}

// WithIDn adds the iDn to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithIDn(iDn *string) *IpamFhrpGroupsListParams {
	o.SetIDn(iDn)
	return o
}

// SetIDn adds the idN to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetIDn(iDn *string) {
	o.IDn = iDn
}

// WithLastUpdated adds the lastUpdated to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithLastUpdated(lastUpdated *string) *IpamFhrpGroupsListParams {
	o.SetLastUpdated(lastUpdated)
	return o
}

// SetLastUpdated adds the lastUpdated to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetLastUpdated(lastUpdated *string) {
	o.LastUpdated = lastUpdated
}

// WithLastUpdatedGt adds the lastUpdatedGt to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithLastUpdatedGt(lastUpdatedGt *string) *IpamFhrpGroupsListParams {
	o.SetLastUpdatedGt(lastUpdatedGt)
	return o
}

// SetLastUpdatedGt adds the lastUpdatedGt to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetLastUpdatedGt(lastUpdatedGt *string) {
	o.LastUpdatedGt = lastUpdatedGt
}

// WithLastUpdatedGte adds the lastUpdatedGte to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithLastUpdatedGte(lastUpdatedGte *string) *IpamFhrpGroupsListParams {
	o.SetLastUpdatedGte(lastUpdatedGte)
	return o
}

// SetLastUpdatedGte adds the lastUpdatedGte to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetLastUpdatedGte(lastUpdatedGte *string) {
	o.LastUpdatedGte = lastUpdatedGte
}

// WithLastUpdatedLt adds the lastUpdatedLt to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithLastUpdatedLt(lastUpdatedLt *string) *IpamFhrpGroupsListParams {
	o.SetLastUpdatedLt(lastUpdatedLt)
	return o
}

// SetLastUpdatedLt adds the lastUpdatedLt to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetLastUpdatedLt(lastUpdatedLt *string) {
	o.LastUpdatedLt = lastUpdatedLt
}

// WithLastUpdatedLte adds the lastUpdatedLte to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithLastUpdatedLte(lastUpdatedLte *string) *IpamFhrpGroupsListParams {
	o.SetLastUpdatedLte(lastUpdatedLte)
	return o
}

// SetLastUpdatedLte adds the lastUpdatedLte to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetLastUpdatedLte(lastUpdatedLte *string) {
	o.LastUpdatedLte = lastUpdatedLte
}

// WithLastUpdatedn adds the lastUpdatedn to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithLastUpdatedn(lastUpdatedn *string) *IpamFhrpGroupsListParams {
	o.SetLastUpdatedn(lastUpdatedn)
	return o
}

// SetLastUpdatedn adds the lastUpdatedN to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetLastUpdatedn(lastUpdatedn *string) {
	o.LastUpdatedn = lastUpdatedn
}

// WithLimit adds the limit to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithLimit(limit *int64) *IpamFhrpGroupsListParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithName adds the name to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithName(name *string) *IpamFhrpGroupsListParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetName(name *string) {
	o.Name = name
}

// WithNameEmpty adds the nameEmpty to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithNameEmpty(nameEmpty *string) *IpamFhrpGroupsListParams {
	o.SetNameEmpty(nameEmpty)
	return o
}

// SetNameEmpty adds the nameEmpty to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetNameEmpty(nameEmpty *string) {
	o.NameEmpty = nameEmpty
}

// WithNameIc adds the nameIc to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithNameIc(nameIc *string) *IpamFhrpGroupsListParams {
	o.SetNameIc(nameIc)
	return o
}

// SetNameIc adds the nameIc to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetNameIc(nameIc *string) {
	o.NameIc = nameIc
}

// WithNameIe adds the nameIe to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithNameIe(nameIe *string) *IpamFhrpGroupsListParams {
	o.SetNameIe(nameIe)
	return o
}

// SetNameIe adds the nameIe to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetNameIe(nameIe *string) {
	o.NameIe = nameIe
}

// WithNameIew adds the nameIew to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithNameIew(nameIew *string) *IpamFhrpGroupsListParams {
	o.SetNameIew(nameIew)
	return o
}

// SetNameIew adds the nameIew to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetNameIew(nameIew *string) {
	o.NameIew = nameIew
}

// WithNameIsw adds the nameIsw to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithNameIsw(nameIsw *string) *IpamFhrpGroupsListParams {
	o.SetNameIsw(nameIsw)
	return o
}

// SetNameIsw adds the nameIsw to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetNameIsw(nameIsw *string) {
	o.NameIsw = nameIsw
}

// WithNamen adds the namen to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithNamen(namen *string) *IpamFhrpGroupsListParams {
	o.SetNamen(namen)
	return o
}

// SetNamen adds the nameN to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetNamen(namen *string) {
	o.Namen = namen
}

// WithNameNic adds the nameNic to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithNameNic(nameNic *string) *IpamFhrpGroupsListParams {
	o.SetNameNic(nameNic)
	return o
}

// SetNameNic adds the nameNic to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetNameNic(nameNic *string) {
	o.NameNic = nameNic
}

// WithNameNie adds the nameNie to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithNameNie(nameNie *string) *IpamFhrpGroupsListParams {
	o.SetNameNie(nameNie)
	return o
}

// SetNameNie adds the nameNie to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetNameNie(nameNie *string) {
	o.NameNie = nameNie
}

// WithNameNiew adds the nameNiew to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithNameNiew(nameNiew *string) *IpamFhrpGroupsListParams {
	o.SetNameNiew(nameNiew)
	return o
}

// SetNameNiew adds the nameNiew to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetNameNiew(nameNiew *string) {
	o.NameNiew = nameNiew
}

// WithNameNisw adds the nameNisw to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithNameNisw(nameNisw *string) *IpamFhrpGroupsListParams {
	o.SetNameNisw(nameNisw)
	return o
}

// SetNameNisw adds the nameNisw to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetNameNisw(nameNisw *string) {
	o.NameNisw = nameNisw
}

// WithOffset adds the offset to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithOffset(offset *int64) *IpamFhrpGroupsListParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WithOrdering adds the ordering to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithOrdering(ordering *string) *IpamFhrpGroupsListParams {
	o.SetOrdering(ordering)
	return o
}

// SetOrdering adds the ordering to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetOrdering(ordering *string) {
	o.Ordering = ordering
}

// WithProtocol adds the protocol to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithProtocol(protocol *string) *IpamFhrpGroupsListParams {
	o.SetProtocol(protocol)
	return o
}

// SetProtocol adds the protocol to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetProtocol(protocol *string) {
	o.Protocol = protocol
}

// WithProtocoln adds the protocoln to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithProtocoln(protocoln *string) *IpamFhrpGroupsListParams {
	o.SetProtocoln(protocoln)
	return o
}

// SetProtocoln adds the protocolN to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetProtocoln(protocoln *string) {
	o.Protocoln = protocoln
}

// WithQ adds the q to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithQ(q *string) *IpamFhrpGroupsListParams {
	o.SetQ(q)
	return o
}

// SetQ adds the q to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetQ(q *string) {
	o.Q = q
}

// WithRelatedIP adds the relatedIP to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithRelatedIP(relatedIP *string) *IpamFhrpGroupsListParams {
	o.SetRelatedIP(relatedIP)
	return o
}

// SetRelatedIP adds the relatedIp to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetRelatedIP(relatedIP *string) {
	o.RelatedIP = relatedIP
}

// WithTag adds the tag to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithTag(tag *string) *IpamFhrpGroupsListParams {
	o.SetTag(tag)
	return o
}

// SetTag adds the tag to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetTag(tag *string) {
	o.Tag = tag
}

// WithTagn adds the tagn to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) WithTagn(tagn *string) *IpamFhrpGroupsListParams {
	o.SetTagn(tagn)
	return o
}

// SetTagn adds the tagN to the ipam fhrp groups list params
func (o *IpamFhrpGroupsListParams) SetTagn(tagn *string) {
	o.Tagn = tagn
}

// WriteToRequest writes these params to a swagger request
func (o *IpamFhrpGroupsListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AuthKey != nil {

		// query param auth_key
		var qrAuthKey string

		if o.AuthKey != nil {
			qrAuthKey = *o.AuthKey
		}
		qAuthKey := qrAuthKey
		if qAuthKey != "" {

			if err := r.SetQueryParam("auth_key", qAuthKey); err != nil {
				return err
			}
		}
	}

	if o.AuthKeyEmpty != nil {

		// query param auth_key__empty
		var qrAuthKeyEmpty string

		if o.AuthKeyEmpty != nil {
			qrAuthKeyEmpty = *o.AuthKeyEmpty
		}
		qAuthKeyEmpty := qrAuthKeyEmpty
		if qAuthKeyEmpty != "" {

			if err := r.SetQueryParam("auth_key__empty", qAuthKeyEmpty); err != nil {
				return err
			}
		}
	}

	if o.AuthKeyIc != nil {

		// query param auth_key__ic
		var qrAuthKeyIc string

		if o.AuthKeyIc != nil {
			qrAuthKeyIc = *o.AuthKeyIc
		}
		qAuthKeyIc := qrAuthKeyIc
		if qAuthKeyIc != "" {

			if err := r.SetQueryParam("auth_key__ic", qAuthKeyIc); err != nil {
				return err
			}
		}
	}

	if o.AuthKeyIe != nil {

		// query param auth_key__ie
		var qrAuthKeyIe string

		if o.AuthKeyIe != nil {
			qrAuthKeyIe = *o.AuthKeyIe
		}
		qAuthKeyIe := qrAuthKeyIe
		if qAuthKeyIe != "" {

			if err := r.SetQueryParam("auth_key__ie", qAuthKeyIe); err != nil {
				return err
			}
		}
	}

	if o.AuthKeyIew != nil {

		// query param auth_key__iew
		var qrAuthKeyIew string

		if o.AuthKeyIew != nil {
			qrAuthKeyIew = *o.AuthKeyIew
		}
		qAuthKeyIew := qrAuthKeyIew
		if qAuthKeyIew != "" {

			if err := r.SetQueryParam("auth_key__iew", qAuthKeyIew); err != nil {
				return err
			}
		}
	}

	if o.AuthKeyIsw != nil {

		// query param auth_key__isw
		var qrAuthKeyIsw string

		if o.AuthKeyIsw != nil {
			qrAuthKeyIsw = *o.AuthKeyIsw
		}
		qAuthKeyIsw := qrAuthKeyIsw
		if qAuthKeyIsw != "" {

			if err := r.SetQueryParam("auth_key__isw", qAuthKeyIsw); err != nil {
				return err
			}
		}
	}

	if o.AuthKeyn != nil {

		// query param auth_key__n
		var qrAuthKeyn string

		if o.AuthKeyn != nil {
			qrAuthKeyn = *o.AuthKeyn
		}
		qAuthKeyn := qrAuthKeyn
		if qAuthKeyn != "" {

			if err := r.SetQueryParam("auth_key__n", qAuthKeyn); err != nil {
				return err
			}
		}
	}

	if o.AuthKeyNic != nil {

		// query param auth_key__nic
		var qrAuthKeyNic string

		if o.AuthKeyNic != nil {
			qrAuthKeyNic = *o.AuthKeyNic
		}
		qAuthKeyNic := qrAuthKeyNic
		if qAuthKeyNic != "" {

			if err := r.SetQueryParam("auth_key__nic", qAuthKeyNic); err != nil {
				return err
			}
		}
	}

	if o.AuthKeyNie != nil {

		// query param auth_key__nie
		var qrAuthKeyNie string

		if o.AuthKeyNie != nil {
			qrAuthKeyNie = *o.AuthKeyNie
		}
		qAuthKeyNie := qrAuthKeyNie
		if qAuthKeyNie != "" {

			if err := r.SetQueryParam("auth_key__nie", qAuthKeyNie); err != nil {
				return err
			}
		}
	}

	if o.AuthKeyNiew != nil {

		// query param auth_key__niew
		var qrAuthKeyNiew string

		if o.AuthKeyNiew != nil {
			qrAuthKeyNiew = *o.AuthKeyNiew
		}
		qAuthKeyNiew := qrAuthKeyNiew
		if qAuthKeyNiew != "" {

			if err := r.SetQueryParam("auth_key__niew", qAuthKeyNiew); err != nil {
				return err
			}
		}
	}

	if o.AuthKeyNisw != nil {

		// query param auth_key__nisw
		var qrAuthKeyNisw string

		if o.AuthKeyNisw != nil {
			qrAuthKeyNisw = *o.AuthKeyNisw
		}
		qAuthKeyNisw := qrAuthKeyNisw
		if qAuthKeyNisw != "" {

			if err := r.SetQueryParam("auth_key__nisw", qAuthKeyNisw); err != nil {
				return err
			}
		}
	}

	if o.AuthType != nil {

		// query param auth_type
		var qrAuthType string

		if o.AuthType != nil {
			qrAuthType = *o.AuthType
		}
		qAuthType := qrAuthType
		if qAuthType != "" {

			if err := r.SetQueryParam("auth_type", qAuthType); err != nil {
				return err
			}
		}
	}

	if o.AuthTypen != nil {

		// query param auth_type__n
		var qrAuthTypen string

		if o.AuthTypen != nil {
			qrAuthTypen = *o.AuthTypen
		}
		qAuthTypen := qrAuthTypen
		if qAuthTypen != "" {

			if err := r.SetQueryParam("auth_type__n", qAuthTypen); err != nil {
				return err
			}
		}
	}

	if o.Created != nil {

		// query param created
		var qrCreated string

		if o.Created != nil {
			qrCreated = *o.Created
		}
		qCreated := qrCreated
		if qCreated != "" {

			if err := r.SetQueryParam("created", qCreated); err != nil {
				return err
			}
		}
	}

	if o.CreatedGt != nil {

		// query param created__gt
		var qrCreatedGt string

		if o.CreatedGt != nil {
			qrCreatedGt = *o.CreatedGt
		}
		qCreatedGt := qrCreatedGt
		if qCreatedGt != "" {

			if err := r.SetQueryParam("created__gt", qCreatedGt); err != nil {
				return err
			}
		}
	}

	if o.CreatedGte != nil {

		// query param created__gte
		var qrCreatedGte string

		if o.CreatedGte != nil {
			qrCreatedGte = *o.CreatedGte
		}
		qCreatedGte := qrCreatedGte
		if qCreatedGte != "" {

			if err := r.SetQueryParam("created__gte", qCreatedGte); err != nil {
				return err
			}
		}
	}

	if o.CreatedLt != nil {

		// query param created__lt
		var qrCreatedLt string

		if o.CreatedLt != nil {
			qrCreatedLt = *o.CreatedLt
		}
		qCreatedLt := qrCreatedLt
		if qCreatedLt != "" {

			if err := r.SetQueryParam("created__lt", qCreatedLt); err != nil {
				return err
			}
		}
	}

	if o.CreatedLte != nil {

		// query param created__lte
		var qrCreatedLte string

		if o.CreatedLte != nil {
			qrCreatedLte = *o.CreatedLte
		}
		qCreatedLte := qrCreatedLte
		if qCreatedLte != "" {

			if err := r.SetQueryParam("created__lte", qCreatedLte); err != nil {
				return err
			}
		}
	}

	if o.Createdn != nil {

		// query param created__n
		var qrCreatedn string

		if o.Createdn != nil {
			qrCreatedn = *o.Createdn
		}
		qCreatedn := qrCreatedn
		if qCreatedn != "" {

			if err := r.SetQueryParam("created__n", qCreatedn); err != nil {
				return err
			}
		}
	}

	if o.GroupID != nil {

		// query param group_id
		var qrGroupID string

		if o.GroupID != nil {
			qrGroupID = *o.GroupID
		}
		qGroupID := qrGroupID
		if qGroupID != "" {

			if err := r.SetQueryParam("group_id", qGroupID); err != nil {
				return err
			}
		}
	}

	if o.GroupIDGt != nil {

		// query param group_id__gt
		var qrGroupIDGt string

		if o.GroupIDGt != nil {
			qrGroupIDGt = *o.GroupIDGt
		}
		qGroupIDGt := qrGroupIDGt
		if qGroupIDGt != "" {

			if err := r.SetQueryParam("group_id__gt", qGroupIDGt); err != nil {
				return err
			}
		}
	}

	if o.GroupIDGte != nil {

		// query param group_id__gte
		var qrGroupIDGte string

		if o.GroupIDGte != nil {
			qrGroupIDGte = *o.GroupIDGte
		}
		qGroupIDGte := qrGroupIDGte
		if qGroupIDGte != "" {

			if err := r.SetQueryParam("group_id__gte", qGroupIDGte); err != nil {
				return err
			}
		}
	}

	if o.GroupIDLt != nil {

		// query param group_id__lt
		var qrGroupIDLt string

		if o.GroupIDLt != nil {
			qrGroupIDLt = *o.GroupIDLt
		}
		qGroupIDLt := qrGroupIDLt
		if qGroupIDLt != "" {

			if err := r.SetQueryParam("group_id__lt", qGroupIDLt); err != nil {
				return err
			}
		}
	}

	if o.GroupIDLte != nil {

		// query param group_id__lte
		var qrGroupIDLte string

		if o.GroupIDLte != nil {
			qrGroupIDLte = *o.GroupIDLte
		}
		qGroupIDLte := qrGroupIDLte
		if qGroupIDLte != "" {

			if err := r.SetQueryParam("group_id__lte", qGroupIDLte); err != nil {
				return err
			}
		}
	}

	if o.GroupIDn != nil {

		// query param group_id__n
		var qrGroupIDn string

		if o.GroupIDn != nil {
			qrGroupIDn = *o.GroupIDn
		}
		qGroupIDn := qrGroupIDn
		if qGroupIDn != "" {

			if err := r.SetQueryParam("group_id__n", qGroupIDn); err != nil {
				return err
			}
		}
	}

	if o.ID != nil {

		// query param id
		var qrID string

		if o.ID != nil {
			qrID = *o.ID
		}
		qID := qrID
		if qID != "" {

			if err := r.SetQueryParam("id", qID); err != nil {
				return err
			}
		}
	}

	if o.IDGt != nil {

		// query param id__gt
		var qrIDGt string

		if o.IDGt != nil {
			qrIDGt = *o.IDGt
		}
		qIDGt := qrIDGt
		if qIDGt != "" {

			if err := r.SetQueryParam("id__gt", qIDGt); err != nil {
				return err
			}
		}
	}

	if o.IDGte != nil {

		// query param id__gte
		var qrIDGte string

		if o.IDGte != nil {
			qrIDGte = *o.IDGte
		}
		qIDGte := qrIDGte
		if qIDGte != "" {

			if err := r.SetQueryParam("id__gte", qIDGte); err != nil {
				return err
			}
		}
	}

	if o.IDLt != nil {

		// query param id__lt
		var qrIDLt string

		if o.IDLt != nil {
			qrIDLt = *o.IDLt
		}
		qIDLt := qrIDLt
		if qIDLt != "" {

			if err := r.SetQueryParam("id__lt", qIDLt); err != nil {
				return err
			}
		}
	}

	if o.IDLte != nil {

		// query param id__lte
		var qrIDLte string

		if o.IDLte != nil {
			qrIDLte = *o.IDLte
		}
		qIDLte := qrIDLte
		if qIDLte != "" {

			if err := r.SetQueryParam("id__lte", qIDLte); err != nil {
				return err
			}
		}
	}

	if o.IDn != nil {

		// query param id__n
		var qrIDn string

		if o.IDn != nil {
			qrIDn = *o.IDn
		}
		qIDn := qrIDn
		if qIDn != "" {

			if err := r.SetQueryParam("id__n", qIDn); err != nil {
				return err
			}
		}
	}

	if o.LastUpdated != nil {

		// query param last_updated
		var qrLastUpdated string

		if o.LastUpdated != nil {
			qrLastUpdated = *o.LastUpdated
		}
		qLastUpdated := qrLastUpdated
		if qLastUpdated != "" {

			if err := r.SetQueryParam("last_updated", qLastUpdated); err != nil {
				return err
			}
		}
	}

	if o.LastUpdatedGt != nil {

		// query param last_updated__gt
		var qrLastUpdatedGt string

		if o.LastUpdatedGt != nil {
			qrLastUpdatedGt = *o.LastUpdatedGt
		}
		qLastUpdatedGt := qrLastUpdatedGt
		if qLastUpdatedGt != "" {

			if err := r.SetQueryParam("last_updated__gt", qLastUpdatedGt); err != nil {
				return err
			}
		}
	}

	if o.LastUpdatedGte != nil {

		// query param last_updated__gte
		var qrLastUpdatedGte string

		if o.LastUpdatedGte != nil {
			qrLastUpdatedGte = *o.LastUpdatedGte
		}
		qLastUpdatedGte := qrLastUpdatedGte
		if qLastUpdatedGte != "" {

			if err := r.SetQueryParam("last_updated__gte", qLastUpdatedGte); err != nil {
				return err
			}
		}
	}

	if o.LastUpdatedLt != nil {

		// query param last_updated__lt
		var qrLastUpdatedLt string

		if o.LastUpdatedLt != nil {
			qrLastUpdatedLt = *o.LastUpdatedLt
		}
		qLastUpdatedLt := qrLastUpdatedLt
		if qLastUpdatedLt != "" {

			if err := r.SetQueryParam("last_updated__lt", qLastUpdatedLt); err != nil {
				return err
			}
		}
	}

	if o.LastUpdatedLte != nil {

		// query param last_updated__lte
		var qrLastUpdatedLte string

		if o.LastUpdatedLte != nil {
			qrLastUpdatedLte = *o.LastUpdatedLte
		}
		qLastUpdatedLte := qrLastUpdatedLte
		if qLastUpdatedLte != "" {

			if err := r.SetQueryParam("last_updated__lte", qLastUpdatedLte); err != nil {
				return err
			}
		}
	}

	if o.LastUpdatedn != nil {

		// query param last_updated__n
		var qrLastUpdatedn string

		if o.LastUpdatedn != nil {
			qrLastUpdatedn = *o.LastUpdatedn
		}
		qLastUpdatedn := qrLastUpdatedn
		if qLastUpdatedn != "" {

			if err := r.SetQueryParam("last_updated__n", qLastUpdatedn); err != nil {
				return err
			}
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Name != nil {

		// query param name
		var qrName string

		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.NameEmpty != nil {

		// query param name__empty
		var qrNameEmpty string

		if o.NameEmpty != nil {
			qrNameEmpty = *o.NameEmpty
		}
		qNameEmpty := qrNameEmpty
		if qNameEmpty != "" {

			if err := r.SetQueryParam("name__empty", qNameEmpty); err != nil {
				return err
			}
		}
	}

	if o.NameIc != nil {

		// query param name__ic
		var qrNameIc string

		if o.NameIc != nil {
			qrNameIc = *o.NameIc
		}
		qNameIc := qrNameIc
		if qNameIc != "" {

			if err := r.SetQueryParam("name__ic", qNameIc); err != nil {
				return err
			}
		}
	}

	if o.NameIe != nil {

		// query param name__ie
		var qrNameIe string

		if o.NameIe != nil {
			qrNameIe = *o.NameIe
		}
		qNameIe := qrNameIe
		if qNameIe != "" {

			if err := r.SetQueryParam("name__ie", qNameIe); err != nil {
				return err
			}
		}
	}

	if o.NameIew != nil {

		// query param name__iew
		var qrNameIew string

		if o.NameIew != nil {
			qrNameIew = *o.NameIew
		}
		qNameIew := qrNameIew
		if qNameIew != "" {

			if err := r.SetQueryParam("name__iew", qNameIew); err != nil {
				return err
			}
		}
	}

	if o.NameIsw != nil {

		// query param name__isw
		var qrNameIsw string

		if o.NameIsw != nil {
			qrNameIsw = *o.NameIsw
		}
		qNameIsw := qrNameIsw
		if qNameIsw != "" {

			if err := r.SetQueryParam("name__isw", qNameIsw); err != nil {
				return err
			}
		}
	}

	if o.Namen != nil {

		// query param name__n
		var qrNamen string

		if o.Namen != nil {
			qrNamen = *o.Namen
		}
		qNamen := qrNamen
		if qNamen != "" {

			if err := r.SetQueryParam("name__n", qNamen); err != nil {
				return err
			}
		}
	}

	if o.NameNic != nil {

		// query param name__nic
		var qrNameNic string

		if o.NameNic != nil {
			qrNameNic = *o.NameNic
		}
		qNameNic := qrNameNic
		if qNameNic != "" {

			if err := r.SetQueryParam("name__nic", qNameNic); err != nil {
				return err
			}
		}
	}

	if o.NameNie != nil {

		// query param name__nie
		var qrNameNie string

		if o.NameNie != nil {
			qrNameNie = *o.NameNie
		}
		qNameNie := qrNameNie
		if qNameNie != "" {

			if err := r.SetQueryParam("name__nie", qNameNie); err != nil {
				return err
			}
		}
	}

	if o.NameNiew != nil {

		// query param name__niew
		var qrNameNiew string

		if o.NameNiew != nil {
			qrNameNiew = *o.NameNiew
		}
		qNameNiew := qrNameNiew
		if qNameNiew != "" {

			if err := r.SetQueryParam("name__niew", qNameNiew); err != nil {
				return err
			}
		}
	}

	if o.NameNisw != nil {

		// query param name__nisw
		var qrNameNisw string

		if o.NameNisw != nil {
			qrNameNisw = *o.NameNisw
		}
		qNameNisw := qrNameNisw
		if qNameNisw != "" {

			if err := r.SetQueryParam("name__nisw", qNameNisw); err != nil {
				return err
			}
		}
	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64

		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {

			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}
	}

	if o.Ordering != nil {

		// query param ordering
		var qrOrdering string

		if o.Ordering != nil {
			qrOrdering = *o.Ordering
		}
		qOrdering := qrOrdering
		if qOrdering != "" {

			if err := r.SetQueryParam("ordering", qOrdering); err != nil {
				return err
			}
		}
	}

	if o.Protocol != nil {

		// query param protocol
		var qrProtocol string

		if o.Protocol != nil {
			qrProtocol = *o.Protocol
		}
		qProtocol := qrProtocol
		if qProtocol != "" {

			if err := r.SetQueryParam("protocol", qProtocol); err != nil {
				return err
			}
		}
	}

	if o.Protocoln != nil {

		// query param protocol__n
		var qrProtocoln string

		if o.Protocoln != nil {
			qrProtocoln = *o.Protocoln
		}
		qProtocoln := qrProtocoln
		if qProtocoln != "" {

			if err := r.SetQueryParam("protocol__n", qProtocoln); err != nil {
				return err
			}
		}
	}

	if o.Q != nil {

		// query param q
		var qrQ string

		if o.Q != nil {
			qrQ = *o.Q
		}
		qQ := qrQ
		if qQ != "" {

			if err := r.SetQueryParam("q", qQ); err != nil {
				return err
			}
		}
	}

	if o.RelatedIP != nil {

		// query param related_ip
		var qrRelatedIP string

		if o.RelatedIP != nil {
			qrRelatedIP = *o.RelatedIP
		}
		qRelatedIP := qrRelatedIP
		if qRelatedIP != "" {

			if err := r.SetQueryParam("related_ip", qRelatedIP); err != nil {
				return err
			}
		}
	}

	if o.Tag != nil {

		// query param tag
		var qrTag string

		if o.Tag != nil {
			qrTag = *o.Tag
		}
		qTag := qrTag
		if qTag != "" {

			if err := r.SetQueryParam("tag", qTag); err != nil {
				return err
			}
		}
	}

	if o.Tagn != nil {

		// query param tag__n
		var qrTagn string

		if o.Tagn != nil {
			qrTagn = *o.Tagn
		}
		qTagn := qrTagn
		if qTagn != "" {

			if err := r.SetQueryParam("tag__n", qTagn); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
