// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2020 The go-netbox Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package ipam

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewIpamL2vpnTerminationsListParams creates a new IpamL2vpnTerminationsListParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewIpamL2vpnTerminationsListParams() *IpamL2vpnTerminationsListParams {
	return &IpamL2vpnTerminationsListParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewIpamL2vpnTerminationsListParamsWithTimeout creates a new IpamL2vpnTerminationsListParams object
// with the ability to set a timeout on a request.
func NewIpamL2vpnTerminationsListParamsWithTimeout(timeout time.Duration) *IpamL2vpnTerminationsListParams {
	return &IpamL2vpnTerminationsListParams{
		timeout: timeout,
	}
}

// NewIpamL2vpnTerminationsListParamsWithContext creates a new IpamL2vpnTerminationsListParams object
// with the ability to set a context for a request.
func NewIpamL2vpnTerminationsListParamsWithContext(ctx context.Context) *IpamL2vpnTerminationsListParams {
	return &IpamL2vpnTerminationsListParams{
		Context: ctx,
	}
}

// NewIpamL2vpnTerminationsListParamsWithHTTPClient creates a new IpamL2vpnTerminationsListParams object
// with the ability to set a custom HTTPClient for a request.
func NewIpamL2vpnTerminationsListParamsWithHTTPClient(client *http.Client) *IpamL2vpnTerminationsListParams {
	return &IpamL2vpnTerminationsListParams{
		HTTPClient: client,
	}
}

/*
IpamL2vpnTerminationsListParams contains all the parameters to send to the API endpoint

	for the ipam l2vpn terminations list operation.

	Typically these are written to a http.Request.
*/
type IpamL2vpnTerminationsListParams struct {

	// AssignedObjectType.
	AssignedObjectType *string

	// AssignedObjectTypen.
	AssignedObjectTypen *string

	// AssignedObjectTypeID.
	AssignedObjectTypeID *string

	// AssignedObjectTypeIDn.
	AssignedObjectTypeIDn *string

	// Created.
	Created *string

	// CreatedGt.
	CreatedGt *string

	// CreatedGte.
	CreatedGte *string

	// CreatedLt.
	CreatedLt *string

	// CreatedLte.
	CreatedLte *string

	// Createdn.
	Createdn *string

	// Device.
	Device *string

	// Devicen.
	Devicen *string

	// DeviceID.
	DeviceID *string

	// DeviceIDn.
	DeviceIDn *string

	// ID.
	ID *string

	// IDGt.
	IDGt *string

	// IDGte.
	IDGte *string

	// IDLt.
	IDLt *string

	// IDLte.
	IDLte *string

	// IDn.
	IDn *string

	// Interface.
	Interface *string

	// Interfacen.
	Interfacen *string

	// InterfaceID.
	InterfaceID *string

	// InterfaceIDn.
	InterfaceIDn *string

	// L2vpn.
	L2vpn *string

	// L2vpnn.
	L2vpnn *string

	// L2vpnID.
	L2vpnID *string

	// L2vpnIDn.
	L2vpnIDn *string

	// LastUpdated.
	LastUpdated *string

	// LastUpdatedGt.
	LastUpdatedGt *string

	// LastUpdatedGte.
	LastUpdatedGte *string

	// LastUpdatedLt.
	LastUpdatedLt *string

	// LastUpdatedLte.
	LastUpdatedLte *string

	// LastUpdatedn.
	LastUpdatedn *string

	/* Limit.

	   Number of results to return per page.
	*/
	Limit *int64

	/* Offset.

	   The initial index from which to return the results.
	*/
	Offset *int64

	/* Ordering.

	   Which field to use when ordering the results.
	*/
	Ordering *string

	// Q.
	Q *string

	// Region.
	Region *string

	// RegionID.
	RegionID *string

	// Site.
	Site *string

	// SiteID.
	SiteID *string

	// Tag.
	Tag *string

	// Tagn.
	Tagn *string

	// VirtualMachine.
	VirtualMachine *string

	// VirtualMachinen.
	VirtualMachinen *string

	// VirtualMachineID.
	VirtualMachineID *string

	// VirtualMachineIDn.
	VirtualMachineIDn *string

	// Vlan.
	Vlan *string

	// Vlann.
	Vlann *string

	// VlanID.
	VlanID *string

	// VlanIDn.
	VlanIDn *string

	// VlanVid.
	VlanVid *float64

	// VlanVidGt.
	VlanVidGt *float64

	// VlanVidGte.
	VlanVidGte *float64

	// VlanVidLt.
	VlanVidLt *float64

	// VlanVidLte.
	VlanVidLte *float64

	// VlanVidn.
	VlanVidn *float64

	// Vminterface.
	Vminterface *string

	// Vminterfacen.
	Vminterfacen *string

	// VminterfaceID.
	VminterfaceID *string

	// VminterfaceIDn.
	VminterfaceIDn *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the ipam l2vpn terminations list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *IpamL2vpnTerminationsListParams) WithDefaults() *IpamL2vpnTerminationsListParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the ipam l2vpn terminations list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *IpamL2vpnTerminationsListParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithTimeout(timeout time.Duration) *IpamL2vpnTerminationsListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithContext(ctx context.Context) *IpamL2vpnTerminationsListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithHTTPClient(client *http.Client) *IpamL2vpnTerminationsListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAssignedObjectType adds the assignedObjectType to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithAssignedObjectType(assignedObjectType *string) *IpamL2vpnTerminationsListParams {
	o.SetAssignedObjectType(assignedObjectType)
	return o
}

// SetAssignedObjectType adds the assignedObjectType to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetAssignedObjectType(assignedObjectType *string) {
	o.AssignedObjectType = assignedObjectType
}

// WithAssignedObjectTypen adds the assignedObjectTypen to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithAssignedObjectTypen(assignedObjectTypen *string) *IpamL2vpnTerminationsListParams {
	o.SetAssignedObjectTypen(assignedObjectTypen)
	return o
}

// SetAssignedObjectTypen adds the assignedObjectTypeN to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetAssignedObjectTypen(assignedObjectTypen *string) {
	o.AssignedObjectTypen = assignedObjectTypen
}

// WithAssignedObjectTypeID adds the assignedObjectTypeID to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithAssignedObjectTypeID(assignedObjectTypeID *string) *IpamL2vpnTerminationsListParams {
	o.SetAssignedObjectTypeID(assignedObjectTypeID)
	return o
}

// SetAssignedObjectTypeID adds the assignedObjectTypeId to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetAssignedObjectTypeID(assignedObjectTypeID *string) {
	o.AssignedObjectTypeID = assignedObjectTypeID
}

// WithAssignedObjectTypeIDn adds the assignedObjectTypeIDn to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithAssignedObjectTypeIDn(assignedObjectTypeIDn *string) *IpamL2vpnTerminationsListParams {
	o.SetAssignedObjectTypeIDn(assignedObjectTypeIDn)
	return o
}

// SetAssignedObjectTypeIDn adds the assignedObjectTypeIdN to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetAssignedObjectTypeIDn(assignedObjectTypeIDn *string) {
	o.AssignedObjectTypeIDn = assignedObjectTypeIDn
}

// WithCreated adds the created to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithCreated(created *string) *IpamL2vpnTerminationsListParams {
	o.SetCreated(created)
	return o
}

// SetCreated adds the created to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetCreated(created *string) {
	o.Created = created
}

// WithCreatedGt adds the createdGt to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithCreatedGt(createdGt *string) *IpamL2vpnTerminationsListParams {
	o.SetCreatedGt(createdGt)
	return o
}

// SetCreatedGt adds the createdGt to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetCreatedGt(createdGt *string) {
	o.CreatedGt = createdGt
}

// WithCreatedGte adds the createdGte to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithCreatedGte(createdGte *string) *IpamL2vpnTerminationsListParams {
	o.SetCreatedGte(createdGte)
	return o
}

// SetCreatedGte adds the createdGte to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetCreatedGte(createdGte *string) {
	o.CreatedGte = createdGte
}

// WithCreatedLt adds the createdLt to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithCreatedLt(createdLt *string) *IpamL2vpnTerminationsListParams {
	o.SetCreatedLt(createdLt)
	return o
}

// SetCreatedLt adds the createdLt to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetCreatedLt(createdLt *string) {
	o.CreatedLt = createdLt
}

// WithCreatedLte adds the createdLte to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithCreatedLte(createdLte *string) *IpamL2vpnTerminationsListParams {
	o.SetCreatedLte(createdLte)
	return o
}

// SetCreatedLte adds the createdLte to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetCreatedLte(createdLte *string) {
	o.CreatedLte = createdLte
}

// WithCreatedn adds the createdn to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithCreatedn(createdn *string) *IpamL2vpnTerminationsListParams {
	o.SetCreatedn(createdn)
	return o
}

// SetCreatedn adds the createdN to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetCreatedn(createdn *string) {
	o.Createdn = createdn
}

// WithDevice adds the device to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithDevice(device *string) *IpamL2vpnTerminationsListParams {
	o.SetDevice(device)
	return o
}

// SetDevice adds the device to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetDevice(device *string) {
	o.Device = device
}

// WithDevicen adds the devicen to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithDevicen(devicen *string) *IpamL2vpnTerminationsListParams {
	o.SetDevicen(devicen)
	return o
}

// SetDevicen adds the deviceN to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetDevicen(devicen *string) {
	o.Devicen = devicen
}

// WithDeviceID adds the deviceID to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithDeviceID(deviceID *string) *IpamL2vpnTerminationsListParams {
	o.SetDeviceID(deviceID)
	return o
}

// SetDeviceID adds the deviceId to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetDeviceID(deviceID *string) {
	o.DeviceID = deviceID
}

// WithDeviceIDn adds the deviceIDn to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithDeviceIDn(deviceIDn *string) *IpamL2vpnTerminationsListParams {
	o.SetDeviceIDn(deviceIDn)
	return o
}

// SetDeviceIDn adds the deviceIdN to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetDeviceIDn(deviceIDn *string) {
	o.DeviceIDn = deviceIDn
}

// WithID adds the id to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithID(id *string) *IpamL2vpnTerminationsListParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetID(id *string) {
	o.ID = id
}

// WithIDGt adds the iDGt to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithIDGt(iDGt *string) *IpamL2vpnTerminationsListParams {
	o.SetIDGt(iDGt)
	return o
}

// SetIDGt adds the idGt to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetIDGt(iDGt *string) {
	o.IDGt = iDGt
}

// WithIDGte adds the iDGte to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithIDGte(iDGte *string) *IpamL2vpnTerminationsListParams {
	o.SetIDGte(iDGte)
	return o
}

// SetIDGte adds the idGte to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetIDGte(iDGte *string) {
	o.IDGte = iDGte
}

// WithIDLt adds the iDLt to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithIDLt(iDLt *string) *IpamL2vpnTerminationsListParams {
	o.SetIDLt(iDLt)
	return o
}

// SetIDLt adds the idLt to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetIDLt(iDLt *string) {
	o.IDLt = iDLt
}

// WithIDLte adds the iDLte to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithIDLte(iDLte *string) *IpamL2vpnTerminationsListParams {
	o.SetIDLte(iDLte)
	return o
}

// SetIDLte adds the idLte to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetIDLte(iDLte *string) {
	o.IDLte = iDLte
}

// WithIDn adds the iDn to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithIDn(iDn *string) *IpamL2vpnTerminationsListParams {
	o.SetIDn(iDn)
	return o
}

// SetIDn adds the idN to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetIDn(iDn *string) {
	o.IDn = iDn
}

// WithInterface adds the interfaceVar to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithInterface(interfaceVar *string) *IpamL2vpnTerminationsListParams {
	o.SetInterface(interfaceVar)
	return o
}

// SetInterface adds the interface to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetInterface(interfaceVar *string) {
	o.Interface = interfaceVar
}

// WithInterfacen adds the interfacen to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithInterfacen(interfacen *string) *IpamL2vpnTerminationsListParams {
	o.SetInterfacen(interfacen)
	return o
}

// SetInterfacen adds the interfaceN to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetInterfacen(interfacen *string) {
	o.Interfacen = interfacen
}

// WithInterfaceID adds the interfaceID to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithInterfaceID(interfaceID *string) *IpamL2vpnTerminationsListParams {
	o.SetInterfaceID(interfaceID)
	return o
}

// SetInterfaceID adds the interfaceId to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetInterfaceID(interfaceID *string) {
	o.InterfaceID = interfaceID
}

// WithInterfaceIDn adds the interfaceIDn to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithInterfaceIDn(interfaceIDn *string) *IpamL2vpnTerminationsListParams {
	o.SetInterfaceIDn(interfaceIDn)
	return o
}

// SetInterfaceIDn adds the interfaceIdN to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetInterfaceIDn(interfaceIDn *string) {
	o.InterfaceIDn = interfaceIDn
}

// WithL2vpn adds the l2vpn to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithL2vpn(l2vpn *string) *IpamL2vpnTerminationsListParams {
	o.SetL2vpn(l2vpn)
	return o
}

// SetL2vpn adds the l2vpn to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetL2vpn(l2vpn *string) {
	o.L2vpn = l2vpn
}

// WithL2vpnn adds the l2vpnn to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithL2vpnn(l2vpnn *string) *IpamL2vpnTerminationsListParams {
	o.SetL2vpnn(l2vpnn)
	return o
}

// SetL2vpnn adds the l2vpnN to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetL2vpnn(l2vpnn *string) {
	o.L2vpnn = l2vpnn
}

// WithL2vpnID adds the l2vpnID to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithL2vpnID(l2vpnID *string) *IpamL2vpnTerminationsListParams {
	o.SetL2vpnID(l2vpnID)
	return o
}

// SetL2vpnID adds the l2vpnId to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetL2vpnID(l2vpnID *string) {
	o.L2vpnID = l2vpnID
}

// WithL2vpnIDn adds the l2vpnIDn to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithL2vpnIDn(l2vpnIDn *string) *IpamL2vpnTerminationsListParams {
	o.SetL2vpnIDn(l2vpnIDn)
	return o
}

// SetL2vpnIDn adds the l2vpnIdN to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetL2vpnIDn(l2vpnIDn *string) {
	o.L2vpnIDn = l2vpnIDn
}

// WithLastUpdated adds the lastUpdated to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithLastUpdated(lastUpdated *string) *IpamL2vpnTerminationsListParams {
	o.SetLastUpdated(lastUpdated)
	return o
}

// SetLastUpdated adds the lastUpdated to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetLastUpdated(lastUpdated *string) {
	o.LastUpdated = lastUpdated
}

// WithLastUpdatedGt adds the lastUpdatedGt to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithLastUpdatedGt(lastUpdatedGt *string) *IpamL2vpnTerminationsListParams {
	o.SetLastUpdatedGt(lastUpdatedGt)
	return o
}

// SetLastUpdatedGt adds the lastUpdatedGt to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetLastUpdatedGt(lastUpdatedGt *string) {
	o.LastUpdatedGt = lastUpdatedGt
}

// WithLastUpdatedGte adds the lastUpdatedGte to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithLastUpdatedGte(lastUpdatedGte *string) *IpamL2vpnTerminationsListParams {
	o.SetLastUpdatedGte(lastUpdatedGte)
	return o
}

// SetLastUpdatedGte adds the lastUpdatedGte to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetLastUpdatedGte(lastUpdatedGte *string) {
	o.LastUpdatedGte = lastUpdatedGte
}

// WithLastUpdatedLt adds the lastUpdatedLt to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithLastUpdatedLt(lastUpdatedLt *string) *IpamL2vpnTerminationsListParams {
	o.SetLastUpdatedLt(lastUpdatedLt)
	return o
}

// SetLastUpdatedLt adds the lastUpdatedLt to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetLastUpdatedLt(lastUpdatedLt *string) {
	o.LastUpdatedLt = lastUpdatedLt
}

// WithLastUpdatedLte adds the lastUpdatedLte to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithLastUpdatedLte(lastUpdatedLte *string) *IpamL2vpnTerminationsListParams {
	o.SetLastUpdatedLte(lastUpdatedLte)
	return o
}

// SetLastUpdatedLte adds the lastUpdatedLte to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetLastUpdatedLte(lastUpdatedLte *string) {
	o.LastUpdatedLte = lastUpdatedLte
}

// WithLastUpdatedn adds the lastUpdatedn to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithLastUpdatedn(lastUpdatedn *string) *IpamL2vpnTerminationsListParams {
	o.SetLastUpdatedn(lastUpdatedn)
	return o
}

// SetLastUpdatedn adds the lastUpdatedN to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetLastUpdatedn(lastUpdatedn *string) {
	o.LastUpdatedn = lastUpdatedn
}

// WithLimit adds the limit to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithLimit(limit *int64) *IpamL2vpnTerminationsListParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithOffset adds the offset to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithOffset(offset *int64) *IpamL2vpnTerminationsListParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WithOrdering adds the ordering to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithOrdering(ordering *string) *IpamL2vpnTerminationsListParams {
	o.SetOrdering(ordering)
	return o
}

// SetOrdering adds the ordering to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetOrdering(ordering *string) {
	o.Ordering = ordering
}

// WithQ adds the q to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithQ(q *string) *IpamL2vpnTerminationsListParams {
	o.SetQ(q)
	return o
}

// SetQ adds the q to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetQ(q *string) {
	o.Q = q
}

// WithRegion adds the region to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithRegion(region *string) *IpamL2vpnTerminationsListParams {
	o.SetRegion(region)
	return o
}

// SetRegion adds the region to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetRegion(region *string) {
	o.Region = region
}

// WithRegionID adds the regionID to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithRegionID(regionID *string) *IpamL2vpnTerminationsListParams {
	o.SetRegionID(regionID)
	return o
}

// SetRegionID adds the regionId to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetRegionID(regionID *string) {
	o.RegionID = regionID
}

// WithSite adds the site to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithSite(site *string) *IpamL2vpnTerminationsListParams {
	o.SetSite(site)
	return o
}

// SetSite adds the site to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetSite(site *string) {
	o.Site = site
}

// WithSiteID adds the siteID to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithSiteID(siteID *string) *IpamL2vpnTerminationsListParams {
	o.SetSiteID(siteID)
	return o
}

// SetSiteID adds the siteId to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetSiteID(siteID *string) {
	o.SiteID = siteID
}

// WithTag adds the tag to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithTag(tag *string) *IpamL2vpnTerminationsListParams {
	o.SetTag(tag)
	return o
}

// SetTag adds the tag to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetTag(tag *string) {
	o.Tag = tag
}

// WithTagn adds the tagn to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithTagn(tagn *string) *IpamL2vpnTerminationsListParams {
	o.SetTagn(tagn)
	return o
}

// SetTagn adds the tagN to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetTagn(tagn *string) {
	o.Tagn = tagn
}

// WithVirtualMachine adds the virtualMachine to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithVirtualMachine(virtualMachine *string) *IpamL2vpnTerminationsListParams {
	o.SetVirtualMachine(virtualMachine)
	return o
}

// SetVirtualMachine adds the virtualMachine to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetVirtualMachine(virtualMachine *string) {
	o.VirtualMachine = virtualMachine
}

// WithVirtualMachinen adds the virtualMachinen to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithVirtualMachinen(virtualMachinen *string) *IpamL2vpnTerminationsListParams {
	o.SetVirtualMachinen(virtualMachinen)
	return o
}

// SetVirtualMachinen adds the virtualMachineN to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetVirtualMachinen(virtualMachinen *string) {
	o.VirtualMachinen = virtualMachinen
}

// WithVirtualMachineID adds the virtualMachineID to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithVirtualMachineID(virtualMachineID *string) *IpamL2vpnTerminationsListParams {
	o.SetVirtualMachineID(virtualMachineID)
	return o
}

// SetVirtualMachineID adds the virtualMachineId to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetVirtualMachineID(virtualMachineID *string) {
	o.VirtualMachineID = virtualMachineID
}

// WithVirtualMachineIDn adds the virtualMachineIDn to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithVirtualMachineIDn(virtualMachineIDn *string) *IpamL2vpnTerminationsListParams {
	o.SetVirtualMachineIDn(virtualMachineIDn)
	return o
}

// SetVirtualMachineIDn adds the virtualMachineIdN to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetVirtualMachineIDn(virtualMachineIDn *string) {
	o.VirtualMachineIDn = virtualMachineIDn
}

// WithVlan adds the vlan to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithVlan(vlan *string) *IpamL2vpnTerminationsListParams {
	o.SetVlan(vlan)
	return o
}

// SetVlan adds the vlan to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetVlan(vlan *string) {
	o.Vlan = vlan
}

// WithVlann adds the vlann to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithVlann(vlann *string) *IpamL2vpnTerminationsListParams {
	o.SetVlann(vlann)
	return o
}

// SetVlann adds the vlanN to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetVlann(vlann *string) {
	o.Vlann = vlann
}

// WithVlanID adds the vlanID to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithVlanID(vlanID *string) *IpamL2vpnTerminationsListParams {
	o.SetVlanID(vlanID)
	return o
}

// SetVlanID adds the vlanId to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetVlanID(vlanID *string) {
	o.VlanID = vlanID
}

// WithVlanIDn adds the vlanIDn to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithVlanIDn(vlanIDn *string) *IpamL2vpnTerminationsListParams {
	o.SetVlanIDn(vlanIDn)
	return o
}

// SetVlanIDn adds the vlanIdN to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetVlanIDn(vlanIDn *string) {
	o.VlanIDn = vlanIDn
}

// WithVlanVid adds the vlanVid to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithVlanVid(vlanVid *float64) *IpamL2vpnTerminationsListParams {
	o.SetVlanVid(vlanVid)
	return o
}

// SetVlanVid adds the vlanVid to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetVlanVid(vlanVid *float64) {
	o.VlanVid = vlanVid
}

// WithVlanVidGt adds the vlanVidGt to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithVlanVidGt(vlanVidGt *float64) *IpamL2vpnTerminationsListParams {
	o.SetVlanVidGt(vlanVidGt)
	return o
}

// SetVlanVidGt adds the vlanVidGt to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetVlanVidGt(vlanVidGt *float64) {
	o.VlanVidGt = vlanVidGt
}

// WithVlanVidGte adds the vlanVidGte to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithVlanVidGte(vlanVidGte *float64) *IpamL2vpnTerminationsListParams {
	o.SetVlanVidGte(vlanVidGte)
	return o
}

// SetVlanVidGte adds the vlanVidGte to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetVlanVidGte(vlanVidGte *float64) {
	o.VlanVidGte = vlanVidGte
}

// WithVlanVidLt adds the vlanVidLt to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithVlanVidLt(vlanVidLt *float64) *IpamL2vpnTerminationsListParams {
	o.SetVlanVidLt(vlanVidLt)
	return o
}

// SetVlanVidLt adds the vlanVidLt to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetVlanVidLt(vlanVidLt *float64) {
	o.VlanVidLt = vlanVidLt
}

// WithVlanVidLte adds the vlanVidLte to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithVlanVidLte(vlanVidLte *float64) *IpamL2vpnTerminationsListParams {
	o.SetVlanVidLte(vlanVidLte)
	return o
}

// SetVlanVidLte adds the vlanVidLte to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetVlanVidLte(vlanVidLte *float64) {
	o.VlanVidLte = vlanVidLte
}

// WithVlanVidn adds the vlanVidn to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithVlanVidn(vlanVidn *float64) *IpamL2vpnTerminationsListParams {
	o.SetVlanVidn(vlanVidn)
	return o
}

// SetVlanVidn adds the vlanVidN to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetVlanVidn(vlanVidn *float64) {
	o.VlanVidn = vlanVidn
}

// WithVminterface adds the vminterface to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithVminterface(vminterface *string) *IpamL2vpnTerminationsListParams {
	o.SetVminterface(vminterface)
	return o
}

// SetVminterface adds the vminterface to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetVminterface(vminterface *string) {
	o.Vminterface = vminterface
}

// WithVminterfacen adds the vminterfacen to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithVminterfacen(vminterfacen *string) *IpamL2vpnTerminationsListParams {
	o.SetVminterfacen(vminterfacen)
	return o
}

// SetVminterfacen adds the vminterfaceN to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetVminterfacen(vminterfacen *string) {
	o.Vminterfacen = vminterfacen
}

// WithVminterfaceID adds the vminterfaceID to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithVminterfaceID(vminterfaceID *string) *IpamL2vpnTerminationsListParams {
	o.SetVminterfaceID(vminterfaceID)
	return o
}

// SetVminterfaceID adds the vminterfaceId to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetVminterfaceID(vminterfaceID *string) {
	o.VminterfaceID = vminterfaceID
}

// WithVminterfaceIDn adds the vminterfaceIDn to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) WithVminterfaceIDn(vminterfaceIDn *string) *IpamL2vpnTerminationsListParams {
	o.SetVminterfaceIDn(vminterfaceIDn)
	return o
}

// SetVminterfaceIDn adds the vminterfaceIdN to the ipam l2vpn terminations list params
func (o *IpamL2vpnTerminationsListParams) SetVminterfaceIDn(vminterfaceIDn *string) {
	o.VminterfaceIDn = vminterfaceIDn
}

// WriteToRequest writes these params to a swagger request
func (o *IpamL2vpnTerminationsListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AssignedObjectType != nil {

		// query param assigned_object_type
		var qrAssignedObjectType string

		if o.AssignedObjectType != nil {
			qrAssignedObjectType = *o.AssignedObjectType
		}
		qAssignedObjectType := qrAssignedObjectType
		if qAssignedObjectType != "" {

			if err := r.SetQueryParam("assigned_object_type", qAssignedObjectType); err != nil {
				return err
			}
		}
	}

	if o.AssignedObjectTypen != nil {

		// query param assigned_object_type__n
		var qrAssignedObjectTypen string

		if o.AssignedObjectTypen != nil {
			qrAssignedObjectTypen = *o.AssignedObjectTypen
		}
		qAssignedObjectTypen := qrAssignedObjectTypen
		if qAssignedObjectTypen != "" {

			if err := r.SetQueryParam("assigned_object_type__n", qAssignedObjectTypen); err != nil {
				return err
			}
		}
	}

	if o.AssignedObjectTypeID != nil {

		// query param assigned_object_type_id
		var qrAssignedObjectTypeID string

		if o.AssignedObjectTypeID != nil {
			qrAssignedObjectTypeID = *o.AssignedObjectTypeID
		}
		qAssignedObjectTypeID := qrAssignedObjectTypeID
		if qAssignedObjectTypeID != "" {

			if err := r.SetQueryParam("assigned_object_type_id", qAssignedObjectTypeID); err != nil {
				return err
			}
		}
	}

	if o.AssignedObjectTypeIDn != nil {

		// query param assigned_object_type_id__n
		var qrAssignedObjectTypeIDn string

		if o.AssignedObjectTypeIDn != nil {
			qrAssignedObjectTypeIDn = *o.AssignedObjectTypeIDn
		}
		qAssignedObjectTypeIDn := qrAssignedObjectTypeIDn
		if qAssignedObjectTypeIDn != "" {

			if err := r.SetQueryParam("assigned_object_type_id__n", qAssignedObjectTypeIDn); err != nil {
				return err
			}
		}
	}

	if o.Created != nil {

		// query param created
		var qrCreated string

		if o.Created != nil {
			qrCreated = *o.Created
		}
		qCreated := qrCreated
		if qCreated != "" {

			if err := r.SetQueryParam("created", qCreated); err != nil {
				return err
			}
		}
	}

	if o.CreatedGt != nil {

		// query param created__gt
		var qrCreatedGt string

		if o.CreatedGt != nil {
			qrCreatedGt = *o.CreatedGt
		}
		qCreatedGt := qrCreatedGt
		if qCreatedGt != "" {

			if err := r.SetQueryParam("created__gt", qCreatedGt); err != nil {
				return err
			}
		}
	}

	if o.CreatedGte != nil {

		// query param created__gte
		var qrCreatedGte string

		if o.CreatedGte != nil {
			qrCreatedGte = *o.CreatedGte
		}
		qCreatedGte := qrCreatedGte
		if qCreatedGte != "" {

			if err := r.SetQueryParam("created__gte", qCreatedGte); err != nil {
				return err
			}
		}
	}

	if o.CreatedLt != nil {

		// query param created__lt
		var qrCreatedLt string

		if o.CreatedLt != nil {
			qrCreatedLt = *o.CreatedLt
		}
		qCreatedLt := qrCreatedLt
		if qCreatedLt != "" {

			if err := r.SetQueryParam("created__lt", qCreatedLt); err != nil {
				return err
			}
		}
	}

	if o.CreatedLte != nil {

		// query param created__lte
		var qrCreatedLte string

		if o.CreatedLte != nil {
			qrCreatedLte = *o.CreatedLte
		}
		qCreatedLte := qrCreatedLte
		if qCreatedLte != "" {

			if err := r.SetQueryParam("created__lte", qCreatedLte); err != nil {
				return err
			}
		}
	}

	if o.Createdn != nil {

		// query param created__n
		var qrCreatedn string

		if o.Createdn != nil {
			qrCreatedn = *o.Createdn
		}
		qCreatedn := qrCreatedn
		if qCreatedn != "" {

			if err := r.SetQueryParam("created__n", qCreatedn); err != nil {
				return err
			}
		}
	}

	if o.Device != nil {

		// query param device
		var qrDevice string

		if o.Device != nil {
			qrDevice = *o.Device
		}
		qDevice := qrDevice
		if qDevice != "" {

			if err := r.SetQueryParam("device", qDevice); err != nil {
				return err
			}
		}
	}

	if o.Devicen != nil {

		// query param device__n
		var qrDevicen string

		if o.Devicen != nil {
			qrDevicen = *o.Devicen
		}
		qDevicen := qrDevicen
		if qDevicen != "" {

			if err := r.SetQueryParam("device__n", qDevicen); err != nil {
				return err
			}
		}
	}

	if o.DeviceID != nil {

		// query param device_id
		var qrDeviceID string

		if o.DeviceID != nil {
			qrDeviceID = *o.DeviceID
		}
		qDeviceID := qrDeviceID
		if qDeviceID != "" {

			if err := r.SetQueryParam("device_id", qDeviceID); err != nil {
				return err
			}
		}
	}

	if o.DeviceIDn != nil {

		// query param device_id__n
		var qrDeviceIDn string

		if o.DeviceIDn != nil {
			qrDeviceIDn = *o.DeviceIDn
		}
		qDeviceIDn := qrDeviceIDn
		if qDeviceIDn != "" {

			if err := r.SetQueryParam("device_id__n", qDeviceIDn); err != nil {
				return err
			}
		}
	}

	if o.ID != nil {

		// query param id
		var qrID string

		if o.ID != nil {
			qrID = *o.ID
		}
		qID := qrID
		if qID != "" {

			if err := r.SetQueryParam("id", qID); err != nil {
				return err
			}
		}
	}

	if o.IDGt != nil {

		// query param id__gt
		var qrIDGt string

		if o.IDGt != nil {
			qrIDGt = *o.IDGt
		}
		qIDGt := qrIDGt
		if qIDGt != "" {

			if err := r.SetQueryParam("id__gt", qIDGt); err != nil {
				return err
			}
		}
	}

	if o.IDGte != nil {

		// query param id__gte
		var qrIDGte string

		if o.IDGte != nil {
			qrIDGte = *o.IDGte
		}
		qIDGte := qrIDGte
		if qIDGte != "" {

			if err := r.SetQueryParam("id__gte", qIDGte); err != nil {
				return err
			}
		}
	}

	if o.IDLt != nil {

		// query param id__lt
		var qrIDLt string

		if o.IDLt != nil {
			qrIDLt = *o.IDLt
		}
		qIDLt := qrIDLt
		if qIDLt != "" {

			if err := r.SetQueryParam("id__lt", qIDLt); err != nil {
				return err
			}
		}
	}

	if o.IDLte != nil {

		// query param id__lte
		var qrIDLte string

		if o.IDLte != nil {
			qrIDLte = *o.IDLte
		}
		qIDLte := qrIDLte
		if qIDLte != "" {

			if err := r.SetQueryParam("id__lte", qIDLte); err != nil {
				return err
			}
		}
	}

	if o.IDn != nil {

		// query param id__n
		var qrIDn string

		if o.IDn != nil {
			qrIDn = *o.IDn
		}
		qIDn := qrIDn
		if qIDn != "" {

			if err := r.SetQueryParam("id__n", qIDn); err != nil {
				return err
			}
		}
	}

	if o.Interface != nil {

		// query param interface
		var qrInterface string

		if o.Interface != nil {
			qrInterface = *o.Interface
		}
		qInterface := qrInterface
		if qInterface != "" {

			if err := r.SetQueryParam("interface", qInterface); err != nil {
				return err
			}
		}
	}

	if o.Interfacen != nil {

		// query param interface__n
		var qrInterfacen string

		if o.Interfacen != nil {
			qrInterfacen = *o.Interfacen
		}
		qInterfacen := qrInterfacen
		if qInterfacen != "" {

			if err := r.SetQueryParam("interface__n", qInterfacen); err != nil {
				return err
			}
		}
	}

	if o.InterfaceID != nil {

		// query param interface_id
		var qrInterfaceID string

		if o.InterfaceID != nil {
			qrInterfaceID = *o.InterfaceID
		}
		qInterfaceID := qrInterfaceID
		if qInterfaceID != "" {

			if err := r.SetQueryParam("interface_id", qInterfaceID); err != nil {
				return err
			}
		}
	}

	if o.InterfaceIDn != nil {

		// query param interface_id__n
		var qrInterfaceIDn string

		if o.InterfaceIDn != nil {
			qrInterfaceIDn = *o.InterfaceIDn
		}
		qInterfaceIDn := qrInterfaceIDn
		if qInterfaceIDn != "" {

			if err := r.SetQueryParam("interface_id__n", qInterfaceIDn); err != nil {
				return err
			}
		}
	}

	if o.L2vpn != nil {

		// query param l2vpn
		var qrL2vpn string

		if o.L2vpn != nil {
			qrL2vpn = *o.L2vpn
		}
		qL2vpn := qrL2vpn
		if qL2vpn != "" {

			if err := r.SetQueryParam("l2vpn", qL2vpn); err != nil {
				return err
			}
		}
	}

	if o.L2vpnn != nil {

		// query param l2vpn__n
		var qrL2vpnn string

		if o.L2vpnn != nil {
			qrL2vpnn = *o.L2vpnn
		}
		qL2vpnn := qrL2vpnn
		if qL2vpnn != "" {

			if err := r.SetQueryParam("l2vpn__n", qL2vpnn); err != nil {
				return err
			}
		}
	}

	if o.L2vpnID != nil {

		// query param l2vpn_id
		var qrL2vpnID string

		if o.L2vpnID != nil {
			qrL2vpnID = *o.L2vpnID
		}
		qL2vpnID := qrL2vpnID
		if qL2vpnID != "" {

			if err := r.SetQueryParam("l2vpn_id", qL2vpnID); err != nil {
				return err
			}
		}
	}

	if o.L2vpnIDn != nil {

		// query param l2vpn_id__n
		var qrL2vpnIDn string

		if o.L2vpnIDn != nil {
			qrL2vpnIDn = *o.L2vpnIDn
		}
		qL2vpnIDn := qrL2vpnIDn
		if qL2vpnIDn != "" {

			if err := r.SetQueryParam("l2vpn_id__n", qL2vpnIDn); err != nil {
				return err
			}
		}
	}

	if o.LastUpdated != nil {

		// query param last_updated
		var qrLastUpdated string

		if o.LastUpdated != nil {
			qrLastUpdated = *o.LastUpdated
		}
		qLastUpdated := qrLastUpdated
		if qLastUpdated != "" {

			if err := r.SetQueryParam("last_updated", qLastUpdated); err != nil {
				return err
			}
		}
	}

	if o.LastUpdatedGt != nil {

		// query param last_updated__gt
		var qrLastUpdatedGt string

		if o.LastUpdatedGt != nil {
			qrLastUpdatedGt = *o.LastUpdatedGt
		}
		qLastUpdatedGt := qrLastUpdatedGt
		if qLastUpdatedGt != "" {

			if err := r.SetQueryParam("last_updated__gt", qLastUpdatedGt); err != nil {
				return err
			}
		}
	}

	if o.LastUpdatedGte != nil {

		// query param last_updated__gte
		var qrLastUpdatedGte string

		if o.LastUpdatedGte != nil {
			qrLastUpdatedGte = *o.LastUpdatedGte
		}
		qLastUpdatedGte := qrLastUpdatedGte
		if qLastUpdatedGte != "" {

			if err := r.SetQueryParam("last_updated__gte", qLastUpdatedGte); err != nil {
				return err
			}
		}
	}

	if o.LastUpdatedLt != nil {

		// query param last_updated__lt
		var qrLastUpdatedLt string

		if o.LastUpdatedLt != nil {
			qrLastUpdatedLt = *o.LastUpdatedLt
		}
		qLastUpdatedLt := qrLastUpdatedLt
		if qLastUpdatedLt != "" {

			if err := r.SetQueryParam("last_updated__lt", qLastUpdatedLt); err != nil {
				return err
			}
		}
	}

	if o.LastUpdatedLte != nil {

		// query param last_updated__lte
		var qrLastUpdatedLte string

		if o.LastUpdatedLte != nil {
			qrLastUpdatedLte = *o.LastUpdatedLte
		}
		qLastUpdatedLte := qrLastUpdatedLte
		if qLastUpdatedLte != "" {

			if err := r.SetQueryParam("last_updated__lte", qLastUpdatedLte); err != nil {
				return err
			}
		}
	}

	if o.LastUpdatedn != nil {

		// query param last_updated__n
		var qrLastUpdatedn string

		if o.LastUpdatedn != nil {
			qrLastUpdatedn = *o.LastUpdatedn
		}
		qLastUpdatedn := qrLastUpdatedn
		if qLastUpdatedn != "" {

			if err := r.SetQueryParam("last_updated__n", qLastUpdatedn); err != nil {
				return err
			}
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64

		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {

			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}
	}

	if o.Ordering != nil {

		// query param ordering
		var qrOrdering string

		if o.Ordering != nil {
			qrOrdering = *o.Ordering
		}
		qOrdering := qrOrdering
		if qOrdering != "" {

			if err := r.SetQueryParam("ordering", qOrdering); err != nil {
				return err
			}
		}
	}

	if o.Q != nil {

		// query param q
		var qrQ string

		if o.Q != nil {
			qrQ = *o.Q
		}
		qQ := qrQ
		if qQ != "" {

			if err := r.SetQueryParam("q", qQ); err != nil {
				return err
			}
		}
	}

	if o.Region != nil {

		// query param region
		var qrRegion string

		if o.Region != nil {
			qrRegion = *o.Region
		}
		qRegion := qrRegion
		if qRegion != "" {

			if err := r.SetQueryParam("region", qRegion); err != nil {
				return err
			}
		}
	}

	if o.RegionID != nil {

		// query param region_id
		var qrRegionID string

		if o.RegionID != nil {
			qrRegionID = *o.RegionID
		}
		qRegionID := qrRegionID
		if qRegionID != "" {

			if err := r.SetQueryParam("region_id", qRegionID); err != nil {
				return err
			}
		}
	}

	if o.Site != nil {

		// query param site
		var qrSite string

		if o.Site != nil {
			qrSite = *o.Site
		}
		qSite := qrSite
		if qSite != "" {

			if err := r.SetQueryParam("site", qSite); err != nil {
				return err
			}
		}
	}

	if o.SiteID != nil {

		// query param site_id
		var qrSiteID string

		if o.SiteID != nil {
			qrSiteID = *o.SiteID
		}
		qSiteID := qrSiteID
		if qSiteID != "" {

			if err := r.SetQueryParam("site_id", qSiteID); err != nil {
				return err
			}
		}
	}

	if o.Tag != nil {

		// query param tag
		var qrTag string

		if o.Tag != nil {
			qrTag = *o.Tag
		}
		qTag := qrTag
		if qTag != "" {

			if err := r.SetQueryParam("tag", qTag); err != nil {
				return err
			}
		}
	}

	if o.Tagn != nil {

		// query param tag__n
		var qrTagn string

		if o.Tagn != nil {
			qrTagn = *o.Tagn
		}
		qTagn := qrTagn
		if qTagn != "" {

			if err := r.SetQueryParam("tag__n", qTagn); err != nil {
				return err
			}
		}
	}

	if o.VirtualMachine != nil {

		// query param virtual_machine
		var qrVirtualMachine string

		if o.VirtualMachine != nil {
			qrVirtualMachine = *o.VirtualMachine
		}
		qVirtualMachine := qrVirtualMachine
		if qVirtualMachine != "" {

			if err := r.SetQueryParam("virtual_machine", qVirtualMachine); err != nil {
				return err
			}
		}
	}

	if o.VirtualMachinen != nil {

		// query param virtual_machine__n
		var qrVirtualMachinen string

		if o.VirtualMachinen != nil {
			qrVirtualMachinen = *o.VirtualMachinen
		}
		qVirtualMachinen := qrVirtualMachinen
		if qVirtualMachinen != "" {

			if err := r.SetQueryParam("virtual_machine__n", qVirtualMachinen); err != nil {
				return err
			}
		}
	}

	if o.VirtualMachineID != nil {

		// query param virtual_machine_id
		var qrVirtualMachineID string

		if o.VirtualMachineID != nil {
			qrVirtualMachineID = *o.VirtualMachineID
		}
		qVirtualMachineID := qrVirtualMachineID
		if qVirtualMachineID != "" {

			if err := r.SetQueryParam("virtual_machine_id", qVirtualMachineID); err != nil {
				return err
			}
		}
	}

	if o.VirtualMachineIDn != nil {

		// query param virtual_machine_id__n
		var qrVirtualMachineIDn string

		if o.VirtualMachineIDn != nil {
			qrVirtualMachineIDn = *o.VirtualMachineIDn
		}
		qVirtualMachineIDn := qrVirtualMachineIDn
		if qVirtualMachineIDn != "" {

			if err := r.SetQueryParam("virtual_machine_id__n", qVirtualMachineIDn); err != nil {
				return err
			}
		}
	}

	if o.Vlan != nil {

		// query param vlan
		var qrVlan string

		if o.Vlan != nil {
			qrVlan = *o.Vlan
		}
		qVlan := qrVlan
		if qVlan != "" {

			if err := r.SetQueryParam("vlan", qVlan); err != nil {
				return err
			}
		}
	}

	if o.Vlann != nil {

		// query param vlan__n
		var qrVlann string

		if o.Vlann != nil {
			qrVlann = *o.Vlann
		}
		qVlann := qrVlann
		if qVlann != "" {

			if err := r.SetQueryParam("vlan__n", qVlann); err != nil {
				return err
			}
		}
	}

	if o.VlanID != nil {

		// query param vlan_id
		var qrVlanID string

		if o.VlanID != nil {
			qrVlanID = *o.VlanID
		}
		qVlanID := qrVlanID
		if qVlanID != "" {

			if err := r.SetQueryParam("vlan_id", qVlanID); err != nil {
				return err
			}
		}
	}

	if o.VlanIDn != nil {

		// query param vlan_id__n
		var qrVlanIDn string

		if o.VlanIDn != nil {
			qrVlanIDn = *o.VlanIDn
		}
		qVlanIDn := qrVlanIDn
		if qVlanIDn != "" {

			if err := r.SetQueryParam("vlan_id__n", qVlanIDn); err != nil {
				return err
			}
		}
	}

	if o.VlanVid != nil {

		// query param vlan_vid
		var qrVlanVid float64

		if o.VlanVid != nil {
			qrVlanVid = *o.VlanVid
		}
		qVlanVid := swag.FormatFloat64(qrVlanVid)
		if qVlanVid != "" {

			if err := r.SetQueryParam("vlan_vid", qVlanVid); err != nil {
				return err
			}
		}
	}

	if o.VlanVidGt != nil {

		// query param vlan_vid__gt
		var qrVlanVidGt float64

		if o.VlanVidGt != nil {
			qrVlanVidGt = *o.VlanVidGt
		}
		qVlanVidGt := swag.FormatFloat64(qrVlanVidGt)
		if qVlanVidGt != "" {

			if err := r.SetQueryParam("vlan_vid__gt", qVlanVidGt); err != nil {
				return err
			}
		}
	}

	if o.VlanVidGte != nil {

		// query param vlan_vid__gte
		var qrVlanVidGte float64

		if o.VlanVidGte != nil {
			qrVlanVidGte = *o.VlanVidGte
		}
		qVlanVidGte := swag.FormatFloat64(qrVlanVidGte)
		if qVlanVidGte != "" {

			if err := r.SetQueryParam("vlan_vid__gte", qVlanVidGte); err != nil {
				return err
			}
		}
	}

	if o.VlanVidLt != nil {

		// query param vlan_vid__lt
		var qrVlanVidLt float64

		if o.VlanVidLt != nil {
			qrVlanVidLt = *o.VlanVidLt
		}
		qVlanVidLt := swag.FormatFloat64(qrVlanVidLt)
		if qVlanVidLt != "" {

			if err := r.SetQueryParam("vlan_vid__lt", qVlanVidLt); err != nil {
				return err
			}
		}
	}

	if o.VlanVidLte != nil {

		// query param vlan_vid__lte
		var qrVlanVidLte float64

		if o.VlanVidLte != nil {
			qrVlanVidLte = *o.VlanVidLte
		}
		qVlanVidLte := swag.FormatFloat64(qrVlanVidLte)
		if qVlanVidLte != "" {

			if err := r.SetQueryParam("vlan_vid__lte", qVlanVidLte); err != nil {
				return err
			}
		}
	}

	if o.VlanVidn != nil {

		// query param vlan_vid__n
		var qrVlanVidn float64

		if o.VlanVidn != nil {
			qrVlanVidn = *o.VlanVidn
		}
		qVlanVidn := swag.FormatFloat64(qrVlanVidn)
		if qVlanVidn != "" {

			if err := r.SetQueryParam("vlan_vid__n", qVlanVidn); err != nil {
				return err
			}
		}
	}

	if o.Vminterface != nil {

		// query param vminterface
		var qrVminterface string

		if o.Vminterface != nil {
			qrVminterface = *o.Vminterface
		}
		qVminterface := qrVminterface
		if qVminterface != "" {

			if err := r.SetQueryParam("vminterface", qVminterface); err != nil {
				return err
			}
		}
	}

	if o.Vminterfacen != nil {

		// query param vminterface__n
		var qrVminterfacen string

		if o.Vminterfacen != nil {
			qrVminterfacen = *o.Vminterfacen
		}
		qVminterfacen := qrVminterfacen
		if qVminterfacen != "" {

			if err := r.SetQueryParam("vminterface__n", qVminterfacen); err != nil {
				return err
			}
		}
	}

	if o.VminterfaceID != nil {

		// query param vminterface_id
		var qrVminterfaceID string

		if o.VminterfaceID != nil {
			qrVminterfaceID = *o.VminterfaceID
		}
		qVminterfaceID := qrVminterfaceID
		if qVminterfaceID != "" {

			if err := r.SetQueryParam("vminterface_id", qVminterfaceID); err != nil {
				return err
			}
		}
	}

	if o.VminterfaceIDn != nil {

		// query param vminterface_id__n
		var qrVminterfaceIDn string

		if o.VminterfaceIDn != nil {
			qrVminterfaceIDn = *o.VminterfaceIDn
		}
		qVminterfaceIDn := qrVminterfaceIDn
		if qVminterfaceIDn != "" {

			if err := r.SetQueryParam("vminterface_id__n", qVminterfaceIDn); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
